{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import pino from 'pino';\nimport { format } from 'date-fns';\nimport ja from 'date-fns/locale/ja';\nimport * as stackTraceParser from 'stacktrace-parser';\nimport chalkModule from 'chalk';\n\nlet chalk = new chalkModule.Instance({ level: 0 });\n\nconst options = {\n  logLevel: process.env.LOG_LEVEL || 'debug',\n  sharedContext: {},\n  masks: [] as string[],\n  maskFunc: (s: string) => `${s.substring(0, 8)}***`,\n  browser: {\n    inline: false,\n  },\n};\n\nexport type Level = 'debug' | 'fatal' | 'error' | 'warn' | 'info' | 'trace';\nexport type StatusType = 'error' | 'warn' | 'info' | 'debug';\n\nconst PINO_TO_CONSOLE: Record<Level, StatusType> = {\n  debug: 'debug',\n  fatal: 'error',\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  trace: 'info',\n};\n\nconst LEVEL_TO_LABEL: Record<Level, string> = {\n  debug: 'D',\n  fatal: 'F',\n  error: 'E',\n  warn: 'W',\n  info: 'I',\n  trace: 'I',\n};\n\nexport type ExternalLoggerType = (opts: {\n  message: string;\n  context?: Record<string, any>;\n  status?: StatusType;\n}) => void;\n\nexport const NO_OPS_LOGGER: ExternalLoggerType = () => {};\n\nlet _PRESENT_EXTERNAL_LOGGER = NO_OPS_LOGGER;\n\nexport function setExternalLogger(logger: ExternalLoggerType) {\n  _PRESENT_EXTERNAL_LOGGER = logger;\n}\n\nexport const setLogLevel = (logLevel: Level) => {\n  Object.assign(options, { logLevel });\n};\n\nexport const setContext = (context: Record<string, any>) => {\n  options.sharedContext = context;\n};\n\nexport const setMasks = (masks: string[]) => {\n  options.masks = masks;\n};\n\nexport const setMaskFunc = (f: (s: string) => string) => {\n  options.maskFunc = f;\n};\n\nexport const setBrowserOptions = (opts: { inline?: boolean }) => {\n  Object.assign(options.browser, opts);\n};\n\nexport const setColorLevel = (level: chalkModule.Level) => {\n  chalk = new chalkModule.Instance({ level });\n};\n\nexport type LogFn = pino.LogFn;\n\nexport interface AGLogger {\n  fatal: LogFn;\n  error: LogFn;\n  warn: LogFn;\n  info: LogFn;\n  debug: LogFn;\n  child: (params: Record<string, any>) => AGLogger;\n}\n\nexport const logFactory = (name: string): AGLogger =>\n  pino({\n    name,\n    level: options.logLevel,\n    formatters: {\n      bindings: ({ name }) => ({ name }), // omit pid and hostname\n      log: (o) =>\n        Object.fromEntries(\n          Object.entries(o).map(([k, v]) => [\n            k,\n            options.masks.findIndex((ele) => ele === k) >= 0 && (typeof v === 'string' || typeof v === 'number')\n              ? options.maskFunc(`${v}`)\n              : k === 'stack' && typeof v === 'string'\n              ? stackTraceParser.parse(v)\n              : v,\n          ])\n        ),\n    },\n    browser: {\n      serialize: true,\n      write: (o) => {\n        const { type, stack, level, time, msg, ...rest } = o as {\n          type?: 'Error'; // exist when logger.error is used\n          stack?: string; // exist when logger.error is used\n          level: number; // this is not a label (maybe this is a spec. bug)\n          time: number;\n          msg?: string;\n        };\n\n        const LEVEL_TO_COLOR: Record<Level, typeof chalkModule.Instance | ((s: string) => string)> = {\n          debug: chalk.yellow,\n          fatal: chalk.bgRed.white,\n          error: chalk.red,\n          warn: chalk.gray,\n          info: (s: string) => s,\n          trace: (s: string) => s,\n        };\n\n        const color = LEVEL_TO_COLOR[pino.levels.labels[`${level}`]];\n        const timeLabel = format(new Date(time), 'HH:mm:ss', { locale: ja });\n        const levelKey = pino.levels.labels[`${level}`] as Level;\n        const consoleKey = PINO_TO_CONSOLE[levelKey];\n        const levelLabel = LEVEL_TO_LABEL[levelKey];\n\n        const s = `${timeLabel} ${levelLabel} [${name}] ${msg || ''}`;\n\n        const masked = Object.fromEntries(\n          Object.entries(rest).map(([k, v]) => [\n            k,\n            options.masks.findIndex((ele) => ele === k) >= 0 && (typeof v === 'string' || typeof v === 'number')\n              ? options.maskFunc(`${v}`)\n              : k === 'stack' && typeof v === 'string'\n              ? stackTraceParser.parse(v)\n              : v,\n          ])\n        );\n\n        if (Object.keys(masked).length) {\n          if (options.browser.inline) {\n            console[consoleKey](color(`${s} ${JSON.stringify(masked)}`));\n          } else {\n            console[consoleKey](color(s), masked);\n          }\n        } else {\n          console[consoleKey](color(s));\n        }\n\n        _PRESENT_EXTERNAL_LOGGER({ message: msg || '', context: { logger: name, ...masked }, status: consoleKey });\n      },\n    },\n  });\n"],"names":["chalkModule","pino","stackTraceParser","format","ja"],"mappings":"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"}