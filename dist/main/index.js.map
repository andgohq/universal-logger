{"mappings":"wIAAA,SAASA,EAAuBC,GAC9B,OAAOA,GAAKA,EAAEC,WAAaD,EAAEE,QAAUF,4sBCMzC,IAAMG,EAAU,CAAEC,oBAAoB,EAAOC,eAAQC,EAA2B,SAASC,aAAa,GAIhGC,EAA6C,CACjDC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QAgBF,SAASC,EAAeC,EAAiBC,EAAmBC,GAC5Df,EAAQC,oBAIbe,EAAYC,OAAOC,IACjBL,EACA,CACEC,QAAAA,GAEFC,uBAvBG,SAAqBI,GAC1BH,EAAYI,KAAK,CACfC,YAAaF,EAAKE,YAClBC,WAAY,KACZC,cAAeJ,EAAKI,cACpBC,oBAAoB,EACpBC,qBAAqB,EACrBC,WAAY,MAGd1B,EAAQC,oBAAqB,gDAiBJ,SAACC,GAAyC,IAAxBE,EAAwBuB,UAAAC,OAAA,QAAAzB,IAAAwB,UAAA,IAAAA,UAAA,GACnEE,OAAOC,OAAO9B,EAAS,CAAEE,SAAAA,EAAUE,YAAAA,wBAiBX,SAAC2B,GAAD,OACxBC,EAAK,CACHD,KAAAA,EACA3B,cAAaJ,EAAQI,aACjB,CACE6B,cAAe,eACfC,OAAQ,gBAGdC,MAAOnC,EAAQE,SACfkC,QAAS,CACPC,WAAW,EACXC,MAAO,SAACC,GAAM,IAAAC,EACuCD,EAA9BJ,GADTK,EACJC,KADID,EACEE,MADFF,EACSL,OAAOQ,EADhBH,EACgBG,KAAMC,EADtBJ,EACsBI,IAAQC,EAD9BC,EAAAN,EAAA,CAAA,OAAA,QAAA,QAAA,OAAA,QASNO,EAAYC,EAAO,IAAIC,KAAKN,GAAO,WAAY,CAAEO,OAAQC,IACzDC,EAAa/C,EAAgB2B,EAAKqB,OAAOC,OAAZ,GAAAC,OAAsBpB,KAEnDqB,EAAC,GAAAD,OAAMR,EAAN,MAAAQ,OAAoBxB,EAApB,MAAAwB,OAA6BX,MAAAA,EAAAA,EAAO,IAEvCf,OAAO4B,KAAKZ,GAAMjB,OACpB8B,QAAQN,GAAYI,EAAGX,GAEvBa,QAAQN,GAAYI,GAGtB5C,EAAegC,MAAAA,EAAAA,EAAO,kWAARe,CAAA,GAAiBd,GAAQO","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/index.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","import pino, { Level } from 'pino';\nexport type { Logger, Level } from 'pino';\nimport { format } from 'date-fns';\nimport ja from 'date-fns/locale/ja';\nimport { datadogLogs } from '@datadog/browser-logs';\nimport { Context } from '@datadog/browser-core';\n\nconst options = { datadogInitialized: false, logLevel: process.env.LOG_LEVEL ?? 'debug', prettyPrint: false };\n\nexport type StatusType = Exclude<Parameters<typeof datadogLogs['logger']['log']>[2], undefined>;\n\nconst PINO_TO_CONSOLE: Record<Level, StatusType> = {\n  fatal: 'error',\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  debug: 'debug',\n  trace: 'info',\n};\n\nexport function initDatadog(opts: { clientToken: string; applicationId: string }) {\n  datadogLogs.init({\n    clientToken: opts.clientToken,\n    datacenter: 'us',\n    applicationId: opts.applicationId,\n    silentMultipleInit: true,\n    forwardErrorsToLogs: true,\n    sampleRate: 100,\n  });\n\n  options.datadogInitialized = true;\n}\n\nexport function datadogMessage(message: string, context?: Context, status?: StatusType) {\n  if (!options.datadogInitialized) {\n    return;\n  }\n\n  datadogLogs.logger.log(\n    message,\n    {\n      context,\n    },\n    status\n  );\n}\n\nexport const setLogLevel = (logLevel: Level, prettyPrint = false) => {\n  Object.assign(options, { logLevel, prettyPrint });\n};\n\nexport type AGLoggerFunc = (\n  msgOrMergingObject?: string | Record<string, any>,\n  msg?: string,\n  ...interpolationValues: any[]\n) => void;\n\nexport interface AGLogger {\n  fatal: AGLoggerFunc;\n  error: AGLoggerFunc;\n  warn: AGLoggerFunc;\n  info: AGLoggerFunc;\n  debug: AGLoggerFunc;\n}\n\nexport const logFactory = (name: string): AGLogger =>\n  pino({\n    name,\n    prettyPrint: options.prettyPrint\n      ? {\n          translateTime: 'SYS:HH:mm:ss',\n          ignore: 'pid,hostname',\n        }\n      : false,\n    level: options.logLevel,\n    browser: {\n      serialize: true,\n      write: (o) => {\n        const { type, stack, level, time, msg, ...rest } = o as {\n          type?: 'Error'; // exist when logger.error is used\n          stack?: string; // exist when logger.error is used\n          level: number; // this is not a label (maybe this is a spec. bug)\n          time: number;\n          msg?: string;\n        };\n\n        const timeLabel = format(new Date(time), 'HH:mm:ss', { locale: ja });\n        const levelLabel = PINO_TO_CONSOLE[pino.levels.labels[`${level}`] as Level];\n\n        const s = `${timeLabel} [${name}] ${msg ?? ''}`;\n\n        if (Object.keys(rest).length) {\n          console[levelLabel](s, rest);\n        } else {\n          console[levelLabel](s);\n        }\n\n        datadogMessage(msg ?? '', { ...rest }, levelLabel);\n      },\n    },\n  });\n"],"names":["$parcel$interopDefault","a","__esModule","default","options","datadogInitialized","logLevel","undefined","prettyPrint","PINO_TO_CONSOLE","fatal","error","warn","info","debug","trace","datadogMessage","message","context","status","datadogLogs","logger","log","opts","init","clientToken","datacenter","applicationId","silentMultipleInit","forwardErrorsToLogs","sampleRate","arguments","length","Object","assign","name","pino","translateTime","ignore","level","browser","serialize","write","o","_ref","type","stack","time","msg","rest","$d22a8b6566d19e3c0fc43cb3d743b949$var$_objectWithoutProperties","timeLabel","format","Date","locale","ja","levelLabel","levels","labels","concat","s","keys","console","$d22a8b6566d19e3c0fc43cb3d743b949$var$_objectSpread"],"version":3,"file":"index.js.map"}