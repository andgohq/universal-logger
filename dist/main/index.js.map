{"mappings":"0KAAA,SAASA,EAAuBC,GAC9B,OAAOA,GAAKA,EAAEC,WAAaD,EAAEE,QAAUF,4sBCMzC,IAAIG,GAAsB,EACtBC,GAAe,EAEbC,EAA6C,CACjDC,MAAOC,EAAWC,MAClBA,MAAOD,EAAWC,MAClBC,KAAMF,EAAWE,KACjBC,KAAMH,EAAWG,KACjBC,MAAOJ,EAAWI,MAClBC,MAAOL,EAAWG,MAgBb,SAASG,EAAeC,EAAiBC,EAAmBC,GAC5Db,GAILc,EAAYC,OAAOC,IACjBL,EACA,CACEC,QAAAA,GAEFC,uBAvBG,SAAqBI,GAC1BH,EAAYI,KAAK,CACfC,YAAaF,EAAKE,YAClBC,WAAYC,EAAWC,GACvBC,cAAeN,EAAKM,cACpBC,oBAAoB,EACpBC,qBAAqB,EACrBC,WAAY,MAGd1B,GAAsB,4BAiBxB,IAAM2B,EAAaC,EAAK,CACtBC,YAAa5B,EACb6B,MAAO,QACPC,QAAS,CACPC,WAAW,EACXC,MAAO,SAACC,GAAM,IAAAC,EAAAC,EAC+CF,EAA3CG,GADJD,EACJE,OADIF,EACIC,MAAME,EADVH,EACUG,MAAOT,EADjBM,EACiBN,MAAOU,EADxBJ,EACwBI,KAAMC,EAD9BL,EAC8BK,IAAQC,EADtCC,EAAAP,EAAA,CAAA,SAAA,OAAA,QAAA,QAAA,OAAA,QAUNQ,EAAkB,UAATP,EAAA,QAAAF,EAAA,GAAAU,OAAsBN,MAAAA,OAAtB,EAAsBA,EAAOO,MAAM,MAAM,GAAGC,OAAO,GAAnD,YAAA,IAAAZ,EAAAA,EAA4D,SAAW,GAEhFa,EAAYC,EAAO,IAAIC,KAAKV,GAAO,WAAY,CAAEW,OAAQC,IACzDC,EAAanD,EAAgByB,EAAW2B,OAAOC,OAAlB,GAAAV,OAA4Bf,KAE3D0B,OAAOC,KAAKf,GAAMgB,OACpBC,QAAQN,GAAR,GAAAR,OAAuBG,EAAvB,KAAAH,OAAoCD,GAApCC,OAA6CJ,MAAAA,EAAAA,EAAO,IAAMC,GAE1DiB,QAAQN,GAAR,GAAAR,OAAuBG,EAAvB,KAAAH,OAAoCD,GAApCC,OAA6CJ,MAAAA,EAAAA,EAAO,KAGtD/B,EAAe+B,MAAAA,EAAAA,EAAO,kWAARmB,CAAA,GAAiBlB,GAAQW,2BAKlB,SAACvB,GAAiC,IAAnB+B,EAAmBC,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,IAAAA,UAAA,GAC3DnC,EAAWG,MAAQA,EACnB7B,EAAe4D,sBAiBS,SAACG,GAGzB,OAFgBrC,EAAWsC,MAAM,CAAE3B,OAAQ0B","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/index.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","import pino, { Level } from 'pino';\nexport type { Logger, Level } from 'pino';\nimport { format } from 'date-fns';\nimport ja from 'date-fns/locale/ja';\nimport { datadogLogs, StatusType, Datacenter } from '@datadog/browser-logs';\nimport { Context } from '@datadog/browser-core';\n\nlet DATADOG_INITIALIZED = false;\nlet PRETTY_PRINT = false;\n\nconst PINO_TO_CONSOLE: Record<Level, StatusType> = {\n  fatal: StatusType.error,\n  error: StatusType.error,\n  warn: StatusType.warn,\n  info: StatusType.info,\n  debug: StatusType.debug,\n  trace: StatusType.info,\n};\n\nexport function initDatadog(opts: { clientToken: string; applicationId: string }) {\n  datadogLogs.init({\n    clientToken: opts.clientToken,\n    datacenter: Datacenter.US,\n    applicationId: opts.applicationId,\n    silentMultipleInit: true,\n    forwardErrorsToLogs: true,\n    sampleRate: 100,\n  });\n\n  DATADOG_INITIALIZED = true;\n}\n\nexport function datadogMessage(message: string, context?: Context, status?: StatusType) {\n  if (!DATADOG_INITIALIZED) {\n    return;\n  }\n\n  datadogLogs.logger.log(\n    message,\n    {\n      context,\n    },\n    status\n  );\n}\n\nconst baseLogger = pino({\n  prettyPrint: PRETTY_PRINT,\n  level: 'debug', // this is overwritten by setLogLevel\n  browser: {\n    serialize: true,\n    write: (o) => {\n      const { module, type, stack, level, time, msg, ...rest } = o as {\n        module: string;\n        type?: 'Error'; // exist when logger.error is used\n        stack?: string;\n        level: number; // this is not a label (maybe this is a spec. bug)\n        time: number;\n        msg?: string;\n      };\n\n      const errMsg = type === 'Error' ? `${stack?.split('\\n')[0].substr(7)} ` ?? 'Error ' : '';\n\n      const timeLabel = format(new Date(time), 'HH:mm:ss', { locale: ja });\n      const levelLabel = PINO_TO_CONSOLE[baseLogger.levels.labels[`${level}`] as Level];\n\n      if (Object.keys(rest).length) {\n        console[levelLabel](`${timeLabel} ${errMsg}${msg ?? ''}`, rest);\n      } else {\n        console[levelLabel](`${timeLabel} ${errMsg}${msg ?? ''}`);\n      }\n\n      datadogMessage(msg ?? '', { ...rest }, levelLabel);\n    },\n  },\n});\n\nexport const setLogLevel = (level: Level, pretty = false) => {\n  baseLogger.level = level;\n  PRETTY_PRINT = pretty;\n};\n\nexport type AGLoggerFunc = (\n  msgOrMergingObject?: string | Record<string, any>,\n  msg?: string,\n  ...interpolationValues: any[]\n) => void;\n\nexport interface AGLogger {\n  fatal: AGLoggerFunc;\n  error: AGLoggerFunc;\n  warn: AGLoggerFunc;\n  info: AGLoggerFunc;\n  debug: AGLoggerFunc;\n}\n\nexport const logFactory = (name: string): AGLogger => {\n  const _logger = baseLogger.child({ module: name });\n\n  return _logger;\n};\n"],"names":["$parcel$interopDefault","a","__esModule","default","DATADOG_INITIALIZED","PRETTY_PRINT","PINO_TO_CONSOLE","fatal","StatusType","error","warn","info","debug","trace","datadogMessage","message","context","status","datadogLogs","logger","log","opts","init","clientToken","datacenter","Datacenter","US","applicationId","silentMultipleInit","forwardErrorsToLogs","sampleRate","baseLogger","pino","prettyPrint","level","browser","serialize","write","o","_ref2","_ref","type","module","stack","time","msg","rest","$d6b132facb3e8fe30fc757802b6d5613$var$_objectWithoutProperties","errMsg","concat","split","substr","timeLabel","format","Date","locale","ja","levelLabel","levels","labels","Object","keys","length","console","$d6b132facb3e8fe30fc757802b6d5613$var$_objectSpread","pretty","arguments","undefined","name","child"],"version":3,"file":"index.js.map"}